// Auto-generated by Nimbly Client CLI
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

using N1mbly.Common;
using N1mbly.Models;
using N1mbly.Models.Interfaces;

using Models;

namespace N1mbly.services.PeraCrudController
{
  public class PeraCrudController
  {
    private readonly IRemoteProxy _remoteProxy = new RemoteProxy();

    public async Task<Result<Pera>> FindOne(string id)
    {
      var result = await _remoteProxy.RemoteCallHandler(
        HttpMethod.Get,
        "http://localhost:3030/api" + "/peras",
        "/:id",
        new List<Argument>
        {
          new Argument { Source = "path", Name = "id", Value = id },
          
        }
      );
      return result;
    }

    public async Task<Result<Pera>> FindMany()
    {
      var result = await _remoteProxy.RemoteCallHandler(
        HttpMethod.Get,
        "http://localhost:3030/api" + "/peras",
        "/",
        new List<Argument>
        {
          
        }
      );
      return result;
    }

    public async Task<Result<Pera>> Create(Pera body)
    {
      var result = await _remoteProxy.RemoteCallHandler(
        HttpMethod.Post,
        "http://localhost:3030/api" + "/peras",
        "/",
        new List<Argument>
        {
          new Argument { Source = "body", Name = "body", Value = body },
          
        }
      );
      return result;
    }

    public async Task<Result<Pera>> Update(string id, Pera body)
    {
      var result = await _remoteProxy.RemoteCallHandler(
        HttpMethod.Put,
        "http://localhost:3030/api" + "/peras",
        "/:id",
        new List<Argument>
        {
          new Argument { Source = "path", Name = "id", Value = id },
          new Argument { Source = "body", Name = "body", Value = body },
          
        }
      );
      return result;
    }

    public async Task<Result<Pera>> Delete(string id)
    {
      var result = await _remoteProxy.RemoteCallHandler(
        HttpMethod.Delete,
        "http://localhost:3030/api" + "/peras",
        "/:id",
        new List<Argument>
        {
          new Argument { Source = "path", Name = "id", Value = id },
          
        }
      );
      return result;
    }

  }

}
