// Auto-generated by N1mbly Client CLI
import {
  {% if path != null %}Controller,{% endif %}
  Get,
  Post,
  Put,
  Delete,
  Query,
  Path,
  Body,
  Returns,
  ReturnsArrayOf,
  string, int, float, boolean, type, arrayOf
} from '@n1mbly/api';
import {
{% for name, fields in types %}
  {{name}},
{% endfor %}
} from "./types";
{% if extends %}
import {
{{extends}}
} from "./{{extends}}";
{% endif %}
{% if dependencies %}
import { N1mblyControllersContainerDeps } from ".";
{% endif %}

{% if path != null %}@Controller('{{ path }}'){% endif %}
export class {{ name }} {% if extends %} extends {{ extends }} {% endif %} {
{% if dependencies != null %}
  {% for dependency in dependencies %}
    private {{dependency}}: N1mblyControllersContainerDeps["services"]["{{dependency}}"];
  {% endfor %}
  constructor(deps: N1mblyControllersContainerDeps) {
  {% for dependency in dependencies %}
    this.{{dependency}} = deps.services.{{dependency}};
  {% endfor %}
  }
{% endif %}
{% for action in actions %} {{ methods }}
{% if action.httpMethod %}  @{{ action.httpMethod }}({% if action.httpMethod %}'{{ action.path }}'{% endif %}){% endif %}
  {% if action.resultType %}{{ action.resultDecorator }}{% endif %}
  async {{ action.name }}({% for param in action.params %}
    {% if param.source == "query" %}@Query{% endif %}{% if param.source == "path" %}@Path{% endif %}{% if param.source == "body" %}@Body{% endif %}('{{ param.name }}', { type: "{{ param.type }}" {% if param.$isOptional %}, optional: true {% endif %} {% if param.$isArray %}, array: true {% endif %}}) {{ param.name }}{% if param.$isOptional %}?{% endif %}: {{ param.type }}{% if param.$isArray %}[]{% endif %}{% if not loop.last %}, {% endif %}{% endfor %}): Promise<{{ action.resultType }}>
  {% if action.existingBody %}
    {{ action.existingBody | safe }}
  {% else %}
    {
      // @ts-ignore
      return null;
    }
  {% endif %}
{% endfor %}
}
