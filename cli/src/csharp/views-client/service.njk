// Auto-generated by Nimbly Client CLI
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

using N1mbly.Common;
using N1mbly.Models;
using N1mbly.Models.Interfaces;

using Models;

namespace {{ namespaceName }}
{
  public class {{ name }}
  {
    private readonly IRemoteProxy _remoteProxy = new RemoteProxy();
{% for action in actions %}
    public async Task<Result<{{ action.result }}>> {{ action.name | capitalizeFirstLetter }}({% for param in action.params %}{{ param.type }} {{ param.name }}{% if not loop.last %}, {% endif %}{% endfor %})
    {
      var result = await _remoteProxy.RemoteCallHandler(
        HttpMethod.{{ action.httpMethod }},
        "{{url}}" + "{% if path != null %}{{ path }}{% endif %}",
        "{{ action.path }}",
        new List<Argument>
        {
          {% for param in action.params %}new Argument { Source = "{{ param.source }}", Name = "{{ param.name }}", Value = {{ param.name }} },
          {% endfor %}
        }
      );
      return result;
    }
{% endfor %}
  }

}
