"use strict";(self.webpackChunk_genzy_io_docs=self.webpackChunk_genzy_io_docs||[]).push([[780],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>y});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),i=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=i(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=i(t),d=a,y=p["".concat(l,".").concat(d)]||p[d]||m[d]||s;return t?r.createElement(y,o(o({ref:n},u),{},{components:t})):r.createElement(y,o({ref:n},u))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[p]="string"==typeof e?e:a,o[1]=c;for(var i=2;i<s;i++)o[i]=t[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>o});var r=t(7294),a=t(4334);const s={tabItem:"tabItem_Ymn6"};function o(e){let{children:n,hidden:t,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(s.tabItem,o),hidden:t},n)}},4866:(e,n,t)=>{t.d(n,{Z:()=>k});var r=t(7462),a=t(7294),s=t(4334),o=t(2466),c=t(6550),l=t(1980),i=t(7392),u=t(12);function p(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}function m(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??p(t);return function(e){const n=(0,i.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function d(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function y(e){let{queryString:n=!1,groupId:t}=e;const r=(0,c.k6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l._X)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=m(e),[o,c]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[l,i]=y({queryString:t,groupId:r}),[p,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,u.Nk)(t);return[r,(0,a.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),g=(()=>{const e=l??p;return d({value:e,tabValues:s})?e:null})();(0,a.useLayoutEffect)((()=>{g&&c(g)}),[g]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!d({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),i(e),f(e)}),[i,f,s]),tabValues:s}}var g=t(2389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:n,block:t,selectedValue:c,selectValue:l,tabValues:i}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),m=e=>{const n=e.currentTarget,t=u.indexOf(n),r=i[t].value;r!==c&&(p(n),l(r))},d=e=>{let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;n=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;n=u[t]??u[u.length-1];break}}n?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},n)},i.map((e=>{let{value:n,label:t,attributes:o}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:c===n?0:-1,"aria-selected":c===n,key:n,ref:e=>u.push(e),onKeyDown:d,onClick:m},o,{className:(0,s.Z)("tabs__item",v.tabItem,o?.className,{"tabs__item--active":c===n})}),t??n)})))}function h(e){let{lazy:n,children:t,selectedValue:r}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},s.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r}))))}function z(e){const n=f(e);return a.createElement("div",{className:(0,s.Z)("tabs-container",v.tabList)},a.createElement(b,(0,r.Z)({},e,n)),a.createElement(h,(0,r.Z)({},e,n)))}function k(e){const n=(0,g.Z)();return a.createElement(z,(0,r.Z)({key:String(n)},e))}},5305:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>y,frontMatter:()=>c,metadata:()=>i,toc:()=>p});var r=t(7462),a=(t(7294),t(3905)),s=t(4866),o=t(5162);const c={title:"GenzyApi",sidebar_position:8,slug:"/genzy-api/"},l=void 0,i={unversionedId:"framework/genzy-api",id:"framework/genzy-api",title:"GenzyApi",description:"What GenzyApi is",source:"@site/docs/framework/genzy-api.md",sourceDirName:"framework",slug:"/genzy-api/",permalink:"/docs/0.0.1-alpha/genzy-api/",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"GenzyApi",sidebar_position:8,slug:"/genzy-api/"},sidebar:"sidebar",previous:{title:"GenzyContainer",permalink:"/docs/0.0.1-alpha/genzy-container/"}},u={},p=[{value:"What GenzyApi is",id:"what-genzyapi-is",level:2},{value:"Creating an API",id:"creating-an-api",level:2},{value:"From Plain Local Services",id:"from-plain-local-services",level:3},{value:"From Plain Remote Services",id:"from-plain-remote-services",level:3},{value:"From Configured Local Services",id:"from-configured-local-services",level:3}],m={toc:p},d="wrapper";function y(e){let{components:n,...c}=e;return(0,a.kt)(d,(0,r.Z)({},m,c,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"what-genzyapi-is"},"What GenzyApi is"),(0,a.kt)("p",null,"GenzyApi is responsible for automatically creating a ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Representational_state_transfer"},"RestAPI")," from a set of ",(0,a.kt)("a",{parentName:"p",href:"/docs/0.0.1-alpha/genzy-container/"},"GenzyContainers"),"."),(0,a.kt)("p",null,"It is also responsible for automatically building ",(0,a.kt)("a",{parentName:"p",href:"https://www.openapis.org/"},"OpenAPI")," documentation, and serving ",(0,a.kt)("a",{parentName:"p",href:"https://swagger.io/"},"SwaggerUI")," on route ",(0,a.kt)("inlineCode",{parentName:"p"},"/explorer"),"."),(0,a.kt)("h2",{id:"creating-an-api"},"Creating an API"),(0,a.kt)("h3",{id:"from-plain-local-services"},"From Plain Local Services"),(0,a.kt)(s.Z,{groupId:"lang",mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"cjs",label:"CommonJS",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const { GenzyContainer, GenzyApi } = require("@genzy/api");\n\nclass UserService {\n  async createUser(user) {\n    return user;\n  }\n}\n\nclass AccountService {\n  async getAllAccounts() {\n    return [];\n  }\n}\n\nconst usersGenzyContainer = new GenzyContainer().addLocalServices(\n  UserService,\n  AccountService\n);\n\nconst app = new GenzyApi().from(usersGenzyContainer);\napp.listen(3000);\n'))),(0,a.kt)(o.Z,{value:"js",label:"ES modules",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { GenzyContainer, GenzyApi } from "@genzy/api";\n\nclass UserService {\n  async createUser(user) {\n    return user;\n  }\n}\n\nclass AccountService {\n  async getAllAccounts() {\n    return [];\n  }\n}\n\nconst usersGenzyContainer = new GenzyContainer().addLocalServices(\n  UserService,\n  AccountService\n);\n\nconst app = new GenzyApi().from(usersGenzyContainer);\napp.listen(3000);\n'))),(0,a.kt)(o.Z,{value:"ts",label:"TypeScript",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { GenzyContainer, GenzyApi } from "@genzy/api";\n\nclass UserService {\n  async createUser(user): Promise<any> {\n    return user;\n  }\n}\n\nclass AccountService {\n  async getAllAccounts(): Promise<any[]> {\n    return [];\n  }\n}\n\nconst usersGenzyContainer = new GenzyContainer().addLocalServices(\n  UserService,\n  AccountService\n);\n\nconst app = new GenzyApi().from(usersGenzyContainer);\napp.listen(3000);\n')))),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(6915).Z,width:"1458",height:"477"})),(0,a.kt)("h3",{id:"from-plain-remote-services"},"From Plain Remote Services"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"An API can also be generated from a set of remote services, so that the API acts as an ",(0,a.kt)("a",{parentName:"p",href:"https://www.nginx.com/learn/api-gateway/"},"API Gateway"),".")),(0,a.kt)(s.Z,{groupId:"lang",mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"cjs",label:"CommonJS",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const { GenzyContainer, GenzyApi } = require("@genzy/api");\n\nclass UserService {\n  async createUser(user) {}\n}\n\nclass AccountService {\n  async getAllAccounts() {}\n}\n\nconst usersGenzyContainer = new GenzyContainer().addRemoteServices(\n  "http://localhost:3000",\n  UserService,\n  AccountService\n);\n\nconst app = new GenzyApi().from(usersGenzyContainer);\napp.listen(3000);\n'))),(0,a.kt)(o.Z,{value:"js",label:"ES modules",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { GenzyContainer, GenzyApi } from "@genzy/api";\n\nclass UserService {\n  async createUser(user) {}\n}\n\nclass AccountService {\n  async getAllAccounts() {}\n}\n\nconst usersGenzyContainer = new GenzyContainer().addRemoteServices(\n  "http://localhost:3000",\n  UserService,\n  AccountService\n);\n\nconst app = new GenzyApi().from(usersGenzyContainer);\napp.listen(3000);\n'))),(0,a.kt)(o.Z,{value:"ts",label:"TypeScript",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { GenzyContainer, GenzyApi } from "@genzy/api";\n\nclass UserService {\n  async createUser(user): Promise<any> {}\n}\n\nclass AccountService {\n  async getAllAccounts(): Promise<any[]> {}\n}\n\nconst usersGenzyContainer = new GenzyContainer().addRemoteServices(\n  "http://localhost:3000",\n  UserService,\n  AccountService\n);\n\nconst app = new GenzyApi().from(usersGenzyContainer);\napp.listen(3000);\n')))),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(6915).Z,width:"1458",height:"477"})),(0,a.kt)("h3",{id:"from-configured-local-services"},"From Configured Local Services"),(0,a.kt)(s.Z,{groupId:"lang",mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"cjs",label:"CommonJS",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const { GenzyContainer, GenzyApi } = require("@genzy/api");\n\nclass UserService {\n  $genzy = {\n    path: "/users",\n    createUser: {\n      httpMethod: "POST",\n      path: "/",\n      params: [{ name: "user", source: "body" }],\n    },\n  };\n  async createUser(user) {\n    return user;\n  }\n}\n\nclass AccountService {\n  $genzy = {\n    path: "/accounts",\n    getAllAccounts: {\n      method: "GET",\n      path: "/",\n    },\n  };\n  async getAllAccounts() {\n    return [];\n  }\n}\n\nconst usersGenzyContainer = new GenzyContainer().addLocalServices(\n  UserService,\n  AccountService\n);\n\nconst app = new GenzyApi().from(usersGenzyContainer);\napp.listen(3000);\n'))),(0,a.kt)(o.Z,{value:"js",label:"ES modules",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { GenzyContainer, GenzyApi } from "@genzy/api";\n\nclass UserService {\n  $genzy = {\n    path: "/users",\n    createUser: {\n      httpMethod: "POST",\n      path: "/",\n      params: [{ name: "user", source: "body" }],\n    },\n  };\n  async createUser(user) {\n    return user;\n  }\n}\n\nclass AccountService {\n  $genzy = {\n    path: "/accounts",\n    getAllAccounts: {\n      method: "GET",\n      path: "/",\n    },\n  };\n  async getAllAccounts() {\n    return [];\n  }\n}\n\nconst usersGenzyContainer = new GenzyContainer().addLocalServices(\n  UserService,\n  AccountService\n);\n\nconst app = new GenzyApi().from(usersGenzyContainer);\napp.listen(3000);\n'))),(0,a.kt)(o.Z,{value:"ts",label:"TypeScript",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import {\n  GenzyContainer,\n  GenzyApi,\n  Controller,\n  Get,\n  Post,\n  Body,\n} from "@genzy/api";\n\n@Controller("/users")\nclass UserService {\n  @Post()\n  async createUser(@Body() user): Promise<any> {\n    return user;\n  }\n}\n\n@Controller("/accounts")\nclass AccountService {\n  @Get()\n  async getAllAccounts(): Promise<any[]> {\n    return [];\n  }\n}\n\nconst usersGenzyContainer = new GenzyContainer().addLocalServices(\n  UserService,\n  AccountService\n);\n\nconst app = new GenzyApi().from(usersGenzyContainer);\napp.listen(3000);\n')))),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"img",src:t(2875).Z,width:"1459",height:"464"})))}y.isMDXComponent=!0},2875:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/configured_local-aaae8797fd23340564cedf2d76b49c2d.png"},6915:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/plain_local-d6e32634cad58cdcf6de40c1c418db9b.png"}}]);