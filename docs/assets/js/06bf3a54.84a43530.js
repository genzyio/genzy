"use strict";(self.webpackChunk_genzy_io_docs=self.webpackChunk_genzy_io_docs||[]).push([[320],{3905:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>g});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=t.createContext({}),l=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},d=function(e){var n=l(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(r),f=i,g=u["".concat(s,".").concat(f)]||u[f]||p[f]||a;return r?t.createElement(g,o(o({ref:n},d),{},{components:r})):t.createElement(g,o({ref:n},d))}));function g(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=f;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[u]="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=r[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},5215:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var t=r(7462),i=(r(7294),r(3905));const a={},o=void 0,c={unversionedId:"framework/Advanced-Guides/API-Plugins/Redis-Connector",id:"framework/Advanced-Guides/API-Plugins/Redis-Connector",title:"Redis-Connector",description:"Registering a service for accessing Redis Cache",source:"@site/docs/framework/03-Advanced-Guides/03-API-Plugins/02-Redis-Connector.md",sourceDirName:"framework/03-Advanced-Guides/03-API-Plugins",slug:"/framework/Advanced-Guides/API-Plugins/Redis-Connector",permalink:"/docs/0.0.1-alpha/framework/Advanced-Guides/API-Plugins/Redis-Connector",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"sidebar",previous:{title:"Request-Validation",permalink:"/docs/0.0.1-alpha/framework/Advanced-Guides/API-Plugins/Request-Validation"},next:{title:"Creating-a-custom-plugin",permalink:"/docs/0.0.1-alpha/framework/Advanced-Guides/API-Plugins/Creating-a-custom-plugin"}},s={},l=[{value:"Registering a service for accessing Redis Cache",id:"registering-a-service-for-accessing-redis-cache",level:3}],d={toc:l},u="wrapper";function p(e){let{components:n,...r}=e;return(0,i.kt)(u,(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"registering-a-service-for-accessing-redis-cache"},"Registering a service for accessing Redis Cache"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Redis Cache access that registers a service to passed containers")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"npm i -S genzy-redis-plugin"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { Plugin as GenzyRedisPlugin, RedisService } from "genzy-redis-plugin";\n\nclass TestService {\n  private redisService: RedisService;\n\n  constructor({ redisService }: { redisService: RedisService }) {\n    this.redisService = redisService;\n  }\n\n  async check(key: string) {\n    const fromCache = await this.redisService.get(key);\n    if (!fromCache) {\n      throw new Error("Key not found.");\n    }\n  }\n}\n\nconst controllers = new GenzyContainer();\n\nconst services = new GenzyContainer().addLocalService(TestService);\n\nconst app = new GenzyApi()\n  .addPlugin(new GenzyRedisPlugin({ containers: [services] }))\n  .buildAppFrom(controllers);\n\n// now TestService has access to RedisService that is automatically injected\n')))}p.isMDXComponent=!0}}]);