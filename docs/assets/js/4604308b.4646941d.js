"use strict";(self.webpackChunk_genzy_io_docs=self.webpackChunk_genzy_io_docs||[]).push([[523],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>m});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function c(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?c(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},c=Object.keys(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=t.createContext({}),l=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},p=function(e){var n=l(e.components);return t.createElement(i.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=l(r),f=o,m=d["".concat(i,".").concat(f)]||d[f]||u[f]||c;return r?t.createElement(m,s(s({ref:n},p),{},{components:r})):t.createElement(m,s({ref:n},p))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=r.length,s=new Array(c);s[0]=f;var a={};for(var i in n)hasOwnProperty.call(n,i)&&(a[i]=n[i]);a.originalType=e,a[d]="string"==typeof e?e:o,s[1]=a;for(var l=2;l<c;l++)s[l]=r[l];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4458:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>l});var t=r(7462),o=(r(7294),r(3905));const c={title:"API Interceptors"},s=void 0,a={unversionedId:"framework/Advanced-Guides/Interceptors/server",id:"framework/Advanced-Guides/Interceptors/server",title:"API Interceptors",description:"API Interceptors",source:"@site/docs/framework/03-Advanced-Guides/04-Interceptors/01-server.md",sourceDirName:"framework/03-Advanced-Guides/04-Interceptors",slug:"/framework/Advanced-Guides/Interceptors/server",permalink:"/docs/0.0.1-alpha/framework/Advanced-Guides/Interceptors/server",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"API Interceptors"},sidebar:"sidebar",previous:{title:"index",permalink:"/docs/0.0.1-alpha/framework/Advanced-Guides/Interceptors/"},next:{title:"Client Interceptors",permalink:"/docs/0.0.1-alpha/framework/Advanced-Guides/Interceptors/client"}},i={},l=[{value:"API Interceptors",id:"api-interceptors",level:2}],p={toc:l},d="wrapper";function u(e){let{components:n,...r}=e;return(0,o.kt)(d,(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"api-interceptors"},"API Interceptors"),(0,o.kt)("p",null,"A mechanism for intercepting API requests and it's results. It can be used for things like validating headers, parsing the request or response body, etc."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'// Intercept all service handlers before they are called\nconst app = new GenzyApi()\n  .interceptAll((req: Request, res: Response, next: NextFunction) => {\n    if (isTokenValid(req.headers.Authorization)) next();\n    else res.sendStatus(401);\n  })\n  .buildAppFrom(controllers);\n\n// Intercept specific service handlers before they are called\nconst container = new GenzyContainer().addLocalService(UserService);\nconst app = new GenzyApi()\n  .intercept({\n    accountController: {\n      create: (req: Request, res: Response, next: NextFunction) => {\n        if (isAdminUser(req.headers.Authorization)) next();\n        else res.sendStatus(401);\n      },\n    },\n  })\n  .buildAppFrom(controllers);\n\n// Intercept specific service handlers before they are called with Interceptor class\nclass AccountControllerInterceptor {\n  createUser(req: Request, res: Response, next: NextFunction) {\n    if (isAdminUser(req.headers.Authorization)) next();\n    else res.sendStatus(401);\n  }\n}\nconst container = new GenzyContainer().addLocalService(UserService);\nconst app = new GenzyApi()\n  .intercept({\n    accountController: {\n      create: AccountControllerInterceptor,\n    },\n  })\n  .buildAppFrom(controllers);\n\n// Intercept all service handlers after they are called\nconst container = new GenzyContainer().addLocalService(UserService);\nconst app = new GenzyApi()\n  .interceptAllAfter((req: Request, res: Response, next: NextFunction) => {\n    res.body({ message: "Hello from Genzy." });\n  })\n  .buildAppFrom(controllers);\n\n// Intercept specific service handlers after they are called\nconst container = new GenzyContainer().addLocalService(UserService);\nconst app = new GenzyApi()\n  .interceptAfter({\n    accountController: {\n      create: (req: Request, res: Response, next: NextFunction) => {\n        res.status(201);\n        next();\n      },\n    },\n  })\n  .buildAppFrom(controllers);\n\n// Intercept specific service handlers after they are called with Interceptor class\nclass AccountControllerInterceptor {\n  createUser(req: Request, res: Response, next: NextFunction) {\n    res.status(201);\n    next();\n  }\n}\nconst container = new GenzyContainer().addLocalService(UserService);\nconst app = new GenzyApi()\n  .interceptAfter({\n    accountController: {\n      create: AccountControllerInterceptor,\n    },\n  })\n  .buildAppFrom(controllers);\n')))}u.isMDXComponent=!0}}]);