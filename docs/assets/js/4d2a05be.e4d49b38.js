"use strict";(self.webpackChunk_genzy_io_docs=self.webpackChunk_genzy_io_docs||[]).push([[651],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),l=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(i.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},v=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(t),v=a,m=p["".concat(i,".").concat(v)]||p[v]||d[v]||c;return t?r.createElement(m,o(o({ref:n},u),{},{components:t})):r.createElement(m,o({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=t.length,o=new Array(c);o[0]=v;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<c;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}v.displayName="MDXCreateElement"},8215:(e,n,t)=>{t.d(n,{Z:()=>a});var r=t(7294);const a=function(e){let{children:n,hidden:t,className:a}=e;return r.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}},9877:(e,n,t)=>{t.d(n,{Z:()=>u});var r=t(7462),a=t(7294),c=t(2389),o=t(5773),s=t(6010);const i={tabItem:"tabItem_LplD"};function l(e){const{lazy:n,block:t,defaultValue:c,values:l,groupId:u,className:p}=e,d=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=l??d.map((e=>{let{props:{value:n,label:t,attributes:r}}=e;return{value:n,label:t,attributes:r}})),m=(0,o.lx)(v,((e,n)=>e.value===n.value));if(m.length>0)throw new Error(`Docusaurus error: Duplicate values "${m.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===c?c:c??d.find((e=>e.props.default))?.props.value??d[0]?.props.value;if(null!==h&&!v.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:g}=(0,o.UB)(),[f,b]=(0,a.useState)(h),S=[],{blockElementScrollPositionUntilNextRender:A}=(0,o.o5)();if(null!=u){const e=y[u];null!=e&&e!==f&&v.some((n=>n.value===e))&&b(e)}const k=e=>{const n=e.currentTarget,t=S.indexOf(n),r=v[t].value;r!==f&&(A(n),b(r),null!=u&&g(u,r))},w=e=>{let n=null;switch(e.key){case"ArrowRight":{const t=S.indexOf(e.currentTarget)+1;n=S[t]||S[0];break}case"ArrowLeft":{const t=S.indexOf(e.currentTarget)-1;n=S[t]||S[S.length-1];break}}n?.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},p)},v.map((e=>{let{value:n,label:t,attributes:c}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:f===n?0:-1,"aria-selected":f===n,key:n,ref:e=>S.push(e),onKeyDown:w,onFocus:k,onClick:k},c,{className:(0,s.Z)("tabs__item",i.tabItem,c?.className,{"tabs__item--active":f===n})}),t??n)}))),n?(0,a.cloneElement)(d.filter((e=>e.props.value===f))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},d.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==f})))))}function u(e){const n=(0,c.Z)();return a.createElement(l,(0,r.Z)({key:String(n)},e))}},2849:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>i,default:()=>v,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var r=t(7462),a=(t(7294),t(3905)),c=t(9877),o=t(8215);const s={title:"Introduction",sidebar_position:1,slug:"/"},i=void 0,l={unversionedId:"categories/Introduction/index",id:"categories/Introduction/index",title:"Introduction",description:"What Genzy is",source:"@site/docs/categories/01-Introduction/index.md",sourceDirName:"categories/01-Introduction",slug:"/",permalink:"/docs/v1/",tags:[],version:"current",lastUpdatedAt:1697306351,formattedLastUpdatedAt:"10/14/2023",sidebarPosition:1,frontMatter:{title:"Introduction",sidebar_position:1,slug:"/"},sidebar:"sidebar",next:{title:"How it works",permalink:"/docs/v1/how-it-works/"}},u=[{value:"What Genzy is",id:"what-genzy-is",children:[{value:"Server",id:"server",children:[],level:4},{value:"Server",id:"server-1",children:[],level:4},{value:"Server",id:"server-2",children:[],level:4},{value:"Client",id:"client",children:[],level:4},{value:"Client",id:"client-1",children:[],level:4},{value:"Client",id:"client-2",children:[],level:4}],level:2},{value:"Features",id:"features",children:[{value:"API",id:"api",children:[],level:3},{value:"Client",id:"client-3",children:[],level:3},{value:"Automatic JS/TS Client generation",id:"automatic-jsts-client-generation",children:[],level:3},{value:"Interceptors",id:"interceptors",children:[],level:3},{value:"Automatic OpenAPI docs",id:"automatic-openapi-docs",children:[],level:3}],level:2},{value:"Next steps",id:"next-steps",children:[],level:2}],p={toc:u},d="wrapper";function v(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"what-genzy-is"},"What Genzy is"),(0,a.kt)("p",null,"Genzy is a JavaScript library that enables rapid development of web applications."),(0,a.kt)("p",null,"It is built on top of the ",(0,a.kt)("a",{parentName:"p",href:"https://expressjs.com/"},"Express")," framework and provides additional features like automatic routes registration, client code generation and ",(0,a.kt)("a",{parentName:"p",href:"https://www.openapis.org/"},"OpenAPI")," documentation, along with ",(0,a.kt)("a",{parentName:"p",href:"https://swagger.io/"},"SwaggerUI"),"."),(0,a.kt)("p",null,"Here's a basic example:"),(0,a.kt)(c.Z,{groupId:"lang",mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"cjs",label:"CommonJS",default:!0,mdxType:"TabItem"},(0,a.kt)("h4",{id:"server"},"Server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { GenzyContainer, GenzyApi } = require('@genzy/api');\n\nclass UserService {\n  async createUser(user) {\n    // logic for adding the user\n    return user;\n  }\n}\n\nclass AccountService {\n  // UserService is automatically injected\n  constructor({ userService }) {\n    this.userService = userService;\n  }\n\n  async getAllAccounts() {\n    return [];\n  }\n\n  // take accountInfo object as parameter \n  async createAccount({username}) {\n    // logic for adding the account\n    const newAccount = {id: 1, username};\n    // call another service\n    this.userService.createUser({ accountId: newAccount.id })\n    return newAccount;\n  }\n}\n\nconst usersGenzyContainer = new GenzyContainer()\n  .addLocalServices(UserService, AccountService);\n\nconst app = new GenzyApi().from(usersGenzyContainer);\napp.listen(3000);\n"))),(0,a.kt)(o.Z,{value:"js",label:"ES modules",default:!0,mdxType:"TabItem"},(0,a.kt)("h4",{id:"server-1"},"Server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { GenzyContainer, GenzyApi } from '@genzy/api';\n\nclass UserService {\n  async createUser(user) {\n    // logic for adding the user\n    return user;\n  }\n}\n\nclass AccountService {\n  // UserService is automatically injected\n  constructor({ userService }) {\n    this.userService = userService;\n  }\n\n  async getAllAccounts() {\n    return [];\n  }\n\n  // take accountInfo object as parameter \n  async createAccount({username}) {\n    // logic for adding the account\n    const newAccount = {id: 1, username};\n    // call another service\n    this.userService.createUser({ accountId: newAccount.id })\n    return newAccount;\n  }\n}\n\nconst usersGenzyContainer = new GenzyContainer()\n  .addLocalServices(UserService, AccountService);\n\nconst app = new GenzyApi().from(usersGenzyContainer);\napp.listen(3000);\n"))),(0,a.kt)(o.Z,{value:"ts",label:"TypeScript",default:!0,mdxType:"TabItem"},(0,a.kt)("h4",{id:"server-2"},"Server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { GenzyContainer, GenzyApi, Controller, Post, Get } from '@genzy/api';\n\n@Controller('/users')\nclass UserService {\n  @Post()\n  async createUser(user) {\n    // logic for adding the user\n    return user;\n  }\n}\n\n@Controller('/accounts')\nclass AccountService {\n  // UserService is automatically injected\n  constructor({ userService }) {\n    this.userService = userService;\n  }\n\n  @Get('/all')\n  async getAllAccounts() {\n    return [];\n  }\n\n  // take accountInfo object as parameter \n  async createAccount({username}) {\n    // logic for adding the account\n    const newAccount = {id: 1, username};\n    // call another service\n    this.userService.createUser({ accountId: newAccount.id })\n    return newAccount;\n  }\n}\n\nconst usersGenzyContainer = new GenzyContainer()\n  .addLocalServices(UserService, AccountService);\n\nconst app = new GenzyApi().from(usersGenzyContainer);\napp.listen(3000);\n")))),(0,a.kt)(c.Z,{groupId:"lang",mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"cjs",label:"CommonJS",default:!0,mdxType:"TabItem"},(0,a.kt)("h4",{id:"client"},"Client"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { GenzyContainer } = require('@genzy/client');\n\nconst host = 'http://localhost:3000';\n\nclass UserService {\n  async createUser(user) {}\n}\n\nclass AccountService {\n  async getAllAccounts() {}\n  async createAccount(account) {}\n}\n\nconst usersGenzyContainer = new GenzyContainer()\n  .addRemoteServices(host, UserService, AccountService);\n\n// The instances are available for custom usage\nconst { userService, accountService } = usersGenzyContainer.getAllServices();\n\n// Use the services\naccountService.createAccount({\n  username: 'test',\n})\n.then(newAccount => console.log(newAccount)) // created account from server\n.catch(error => console.log(error));\n\n// Fetch all accounts\nconst allAccounts = await accountService.getAllAccounts();\n"))),(0,a.kt)(o.Z,{value:"js",label:"ES modules",default:!0,mdxType:"TabItem"},(0,a.kt)("h4",{id:"client-1"},"Client"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { GenzyContainer } from '@genzy/client';\n\nconst host = 'http://localhost:3000';\n\nclass UserService {\n  async createUser(user) {}\n}\n\nclass AccountService {\n  async getAllAccounts() {}\n  async createAccount(account) {}\n}\n\nconst usersGenzyContainer = new GenzyContainer()\n  .addRemoteServices(host, UserService, AccountService);\n\n// The instances are available for custom usage\nconst { userService, accountService } = usersGenzyContainer.getAllServices();\n\n// Use the services\naccountService.createAccount({\n  username: 'test',\n})\n.then(newAccount => console.log(newAccount)) // created account from server\n.catch(error => console.log(error));\n\n// Fetch all accounts\nconst allAccounts = await accountService.getAllAccounts();\n"))),(0,a.kt)(o.Z,{value:"ts",label:"TypeScript",default:!0,mdxType:"TabItem"},(0,a.kt)("h4",{id:"client-2"},"Client"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { GenzyContainer, Controller, Post, Get } from '@genzy/client';\n\nconst host = 'http://localhost:3000';\n\n// With TS you can use decorators\n@Controller('/users')\nclass UserService {\n  @Post()\n  async createUser(user) {}\n}\n\n@Controller('/accounts')\nclass AccountService {\n  @Get('/all')\n  async getAllAccounts() {}\n  async createAccount(account) {}\n}\n\nconst usersGenzyContainer = new GenzyContainer()\n  .addRemoteServices(host, UserService, AccountService);\n\ntype GenzyServices = {\n  userService: UserService,\n  accountService: AccountService\n}\n\n// The instances are available for custom usage\nconst { userService, accountService }: GenzyServices = usersGenzyContainer.getAllServices();\n\n// Use the services\naccountService.createAccount({\n  username: 'test',\n})\n.then(newAccount => console.log(newAccount)) // created account from server\n.catch(error => console.log(error));\n\n// Fetch all accounts\nconst allAccounts = await accountService.getAllAccounts();\n")))),(0,a.kt)("h2",{id:"features"},"Features"),(0,a.kt)("p",null,"Here are the features provided by Genzy:"),(0,a.kt)("h3",{id:"api"},"API"),(0,a.kt)("p",null,"Express Application is automatically created based on the service classes passed to the GenzyContainer."),(0,a.kt)("h3",{id:"client-3"},"Client"),(0,a.kt)("p",null,"Client service proxy is automatically created based on the service classes passed to the GenzyContainer."),(0,a.kt)("h3",{id:"automatic-jsts-client-generation"},"Automatic JS/TS Client generation"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"@genzy/client")," package can be used to auto-generate client service files for the existing API."),(0,a.kt)("h3",{id:"interceptors"},"Interceptors"),(0,a.kt)("p",null,"Both Server and Client support defining interceptors. Most common use case for interceptors is handling Authorization, where the client sends a secret with an identity and the server validates it."),(0,a.kt)("h3",{id:"automatic-openapi-docs"},"Automatic OpenAPI docs"),(0,a.kt)("p",null,"Server automatically builds ",(0,a.kt)("a",{parentName:"p",href:"https://www.openapis.org/"},"OpenAPI")," documentation, and serves ",(0,a.kt)("a",{parentName:"p",href:"https://swagger.io/"},"SwaggerUI")," on route ",(0,a.kt)("inlineCode",{parentName:"p"},"/explorer"),"."),(0,a.kt)("h2",{id:"next-steps"},"Next steps"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/v1/server-installation/"},"Server installation")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/v1/client-installation/"},"Client installation"))))}v.isMDXComponent=!0}}]);