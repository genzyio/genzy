"use strict";(self.webpackChunk_genzy_io_docs=self.webpackChunk_genzy_io_docs||[]).push([[925],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),l=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(i.Provider,{value:n},e.children)},p="mdxType",v={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(t),d=a,m=p["".concat(i,".").concat(d)]||p[d]||v[d]||c;return t?r.createElement(m,o(o({ref:n},u),{},{components:t})):r.createElement(m,o({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=t.length,o=new Array(c);o[0]=d;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<c;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8215:(e,n,t)=>{t.d(n,{Z:()=>a});var r=t(7294);const a=function(e){let{children:n,hidden:t,className:a}=e;return r.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}},9877:(e,n,t)=>{t.d(n,{Z:()=>u});var r=t(7462),a=t(7294),c=t(2389),o=t(5773),s=t(6010);const i={tabItem:"tabItem_LplD"};function l(e){const{lazy:n,block:t,defaultValue:c,values:l,groupId:u,className:p}=e,v=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),d=l??v.map((e=>{let{props:{value:n,label:t,attributes:r}}=e;return{value:n,label:t,attributes:r}})),m=(0,o.lx)(d,((e,n)=>e.value===n.value));if(m.length>0)throw new Error(`Docusaurus error: Duplicate values "${m.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===c?c:c??v.find((e=>e.props.default))?.props.value??v[0]?.props.value;if(null!==y&&!d.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${d.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:f}=(0,o.UB)(),[h,b]=(0,a.useState)(y),S=[],{blockElementScrollPositionUntilNextRender:z}=(0,o.o5)();if(null!=u){const e=g[u];null!=e&&e!==h&&d.some((n=>n.value===e))&&b(e)}const C=e=>{const n=e.currentTarget,t=S.indexOf(n),r=d[t].value;r!==h&&(z(n),b(r),null!=u&&f(u,r))},k=e=>{let n=null;switch(e.key){case"ArrowRight":{const t=S.indexOf(e.currentTarget)+1;n=S[t]||S[0];break}case"ArrowLeft":{const t=S.indexOf(e.currentTarget)-1;n=S[t]||S[S.length-1];break}}n?.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},p)},d.map((e=>{let{value:n,label:t,attributes:c}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:h===n?0:-1,"aria-selected":h===n,key:n,ref:e=>S.push(e),onKeyDown:k,onFocus:C,onClick:C},c,{className:(0,s.Z)("tabs__item",i.tabItem,c?.className,{"tabs__item--active":h===n})}),t??n)}))),n?(0,a.cloneElement)(v.filter((e=>e.props.value===h))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},v.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==h})))))}function u(e){const n=(0,c.Z)();return a.createElement(l,(0,r.Z)({key:String(n)},e))}},4710:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var r=t(7462),a=(t(7294),t(3905)),c=t(9877),o=t(8215);const s={title:"GenzyContainer",sidebar_position:7,slug:"/genzy-container/"},i=void 0,l={unversionedId:"categories/genzy-container",id:"categories/genzy-container",title:"GenzyContainer",description:"What Nibmle is",source:"@site/docs/categories/genzy-container.md",sourceDirName:"categories",slug:"/genzy-container/",permalink:"/docs/docs/v1/genzy-container/",tags:[],version:"current",lastUpdatedAt:1697304442,formattedLastUpdatedAt:"10/14/2023",sidebarPosition:7,frontMatter:{title:"GenzyContainer",sidebar_position:7,slug:"/genzy-container/"},sidebar:"sidebar",previous:{title:"Types Configuration",permalink:"/docs/docs/v1/service-class-types-config/"},next:{title:"GenzyApi",permalink:"/docs/docs/v1/genzy-api/"}},u=[{value:"What Nibmle is",id:"what-nibmle-is",children:[],level:2},{value:"Local Services",id:"local-services",children:[],level:2},{value:"Remote Services",id:"remote-services",children:[],level:2}],p={toc:u},v="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(v,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"what-nibmle-is"},"What Nibmle is"),(0,a.kt)("p",null,"GenzyContainer holds a set of related service classes. It is responsible for handling their lifecycle and managing their dependencies."),(0,a.kt)("p",null,"GenzyContainer can hold ",(0,a.kt)("a",{parentName:"p",href:"#local-services"},"Local")," or ",(0,a.kt)("a",{parentName:"p",href:"#remote-services"},"Remote")," services."),(0,a.kt)("h2",{id:"local-services"},"Local Services"),(0,a.kt)("p",null,"Local services are ones that are running in the same process as GenzyContainer."),(0,a.kt)(c.Z,{groupId:"lang",mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"cjs",label:"CommonJS",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const { GenzyContainer } = require("@genzy/client"); // or "@genzy/api"\n\nclass UserService {\n  async getAll() {\n    return [];\n  }\n}\n\nclass AccountService {\n  constructor({ userService }) {\n    this.userService = userService;\n  }\n\n  async getAll() {\n    const accounts = [];\n    const users = await this.userService.getAll();\n    return users.map(user => ({\n      ...user,\n      account: accounts.find(acc => acc.id === user.accountId)\n    }));\n  }\n}\n\n// Creating the GenzyContainer \nconst container = new GenzyContainer().addLocalServices(UserService, AccountService);\n\n// Getting the services out of the GenzyContainer.\nconst { accountService } = nimble.getAllServices();\n'))),(0,a.kt)(o.Z,{value:"mjs",label:"ES modules",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { GenzyContainer } from "@genzy/client"; // or "@genzy/api"\n\nclass UserService {\n  async getAll() {\n    return [];\n  }\n}\n\nclass AccountService {\n  constructor({ userService }) {\n    this.userService = userService;\n  }\n\n  async getAll() {\n    const accounts = [];\n    const users = await this.userService.getAll();\n    return users.map(user => ({\n      ...user,\n      account: accounts.find(acc => acc.id === user.accountId)\n    }));\n  }\n}\n\n// Creating the GenzyContainer \nconst container = new GenzyContainer().addLocalServices(UserService, AccountService);\n\n// Getting the services out of the GenzyContainer.\nconst { accountService } = nimble.getAllServices();\n'))),(0,a.kt)(o.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { GenzyContainer } from "@genzy/client"; // or "@genzy/api"\n\ntype GenzyContainerServices = {\n  userService: UserService;\n  accountService: AccountService;\n}\n\nclass UserService {\n  async getAll(): any[] {\n    return [];\n  }\n}\n\nclass AccountService {\n  constructor({ userService }) {\n    this.userService = userService;\n  }\n\n  async getAll(): any[] {\n    const accounts = [];\n    const users = await this.userService.getAll();\n    return users.map(user => ({\n      ...user,\n      account: accounts.find(acc => acc.id === user.accountId)\n    }));\n  }\n}\n\n// Creating the GenzyContainer \nconst container = new GenzyContainer().addLocalServices(UserService, AccountService);\n\n// Getting the services out of the GenzyContainer\nconst { accountService }: GenzyContainerServices = nimble.getAllServices();\n')))),(0,a.kt)("h2",{id:"remote-services"},"Remote Services"),(0,a.kt)("p",null,"Remote services are, as the name suggests, running in a different process, or on a different server. Methods of a remote service, that is in a GenzyContainer do not require any implementation code, but do require the URL of the server they are running on."),(0,a.kt)(c.Z,{groupId:"lang",mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"cjs",label:"CommonJS",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const { GenzyContainer } = require("@genzy/client"); // or "@genzy/api"\n\nclass UserService {\n  async getAll() {}\n}\n\nclass AccountService {\n  async getAll() {}\n}\n\n// Creating the GenzyContainer \nconst container = new GenzyContainer()\n  .addRemoteServices("http://localhost:3000", UserService, AccountService);\n\n// Getting the services out of the GenzyContainer.\nconst { accountService } = nimble.getAllServices();\n'))),(0,a.kt)(o.Z,{value:"mjs",label:"ES modules",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { GenzyContainer } from "@genzy/client"; // or "@genzy/api"\n\nclass UserService {\n  async getAll() {\n    return [];\n  }\n}\n\nclass AccountService {\n  async getAll() {}\n}\n\n// Creating the GenzyContainer \nconst container = new GenzyContainer()\n  .addRemoteServices("http://localhost:3000", UserService, AccountService);\n\n// Getting the services out of the GenzyContainer.\nconst { accountService } = nimble.getAllServices();\n'))),(0,a.kt)(o.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { GenzyContainer } from "@genzy/client"; // or "@genzy/api"\n\ntype GenzyContainerServices = {\n  userService: UserService;\n  accountService: AccountService;\n}\n\nclass UserService {\n  async getAll(): any[] {}\n}\n\nclass AccountService {\n  async getAll(): any[] {}\n}\n\n// Creating the GenzyContainer \nconst container = new GenzyContainer()\n  .addRemoteServices("http://localhost:3000", UserService, AccountService);\n\n// Getting the services out of the GenzyContainer\nconst { accountService }: GenzyContainerServices = nimble.getAllServices();\n')))),(0,a.kt)("p",null,"GenzyContainer implicitly creates a ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"},"Proxy")," for each service that gets the results of method calls over HTTP."))}d.isMDXComponent=!0}}]);